
{"title": "belongs_to and its amazingness",
"date" : " April 28th",
"author": "Leo Royzengurt",
"id": 0,
"content" : "\u003cp class=\"lead text-justify\"\u003eBelongs to associations are awesome right ! But in recent dealings with developers I have seen some shocking ways to implement it.\u003c/p\u003e\r\n\r\n\u003cbr\u003e\r\n\r\n\u003cp class=\"lead text-justify\" \u003e Let\u0027s take for example a reddit type application where we have a User model and we have a Post model. So posts belong to users and users have many posts. \u003c/p\u003e\r\n\r\n\u003cbr\u003e\r\n\r\n\u003cp class=\"lead text-justify\" \u003e The wrong way of doing this is \u003c/p\u003e\r\n\r\n\r\n\r\n\u003cpre\u003e\u003ccode class=\u0027 hljs ruby\u0027\u003e\u003cspan class=\u0027ruby\u0027\u003e\r\nRails g model Post title:string content:text  user_id:string\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eAnd then in your model\u003c/p\u003e\r\n\r\n\u003cpre\u003e\u003ccode class=\u0027 hljs ruby\u0027\u003e\u003cspan class=\u0027ruby\u0027\u003e\r\nclass Post \u003c ActiveRecord::Base\r\n\tbelongs_to: user \r\nend\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp class=\"lead text-justify\"\u003eThe right way of doing this is\u003c/p\u003e\r\n\u003cbr\u003e\r\n\u003cpre\u003e\u003ccode class=\u0027 hljs ruby\u0027\u003e\u003cspan class=\u0027ruby\u0027\u003e\r\nRails g model Post title:string content:text  user:belongs_to\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp class=\"lead text-justify\"\u003eThis way the model will be created with the belongs_to association there already!\r\n\u003c/p\u003e\r\n\u003cp class=\"lead text-justify\"\u003e\r\nRemember as devs we want to be fast so we can move on to more awesome code ! Don\u0027t make more work for yourself !\u003c/p\u003e"}